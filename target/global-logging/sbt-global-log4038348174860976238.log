[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Dylan\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Dylan\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 18.0.2)
[debug]       Load.loadUnit: plugins took 129.206199ms
[debug]       Load.loadUnit: defsScala took 0.379799ms
[debug] [Loading] Scanning directory C:\Users\Dylan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dylan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.0654 ms
[debug]           Load.resolveProject(global-plugins) took 81.9418ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Dylan\.sbt\1.0\plugins, plugins: List(<none>))) took 144.835ms
[debug] [Loading] Done in C:\Users\Dylan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 176.287299ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4693ms
[debug]     Load.loadUnit(file:/C:/Users/Dylan/.sbt/1.0/plugins/, ...) took 319.2887ms
[debug]   Load.apply: load took 608.0374ms
[debug]   Load.apply: resolveProjects took 12.6345ms
[debug]   Load.apply: finalTransforms took 104.7272ms
[debug]   Load.apply: config.delegates took 12.427399ms
[debug]   Load.apply: Def.make(settings)... took 525.2322ms
[debug]   Load.apply: structureIndex took 131.6625ms
[debug]   Load.apply: mkStreams took 2.006799ms
[info] loading global plugins from C:\Users\Dylan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8039.433999ms
[debug]           Load.loadUnit: plugins took 73.3658ms
[debug]           Load.loadUnit: defsScala took 0.0102ms
[debug] [Loading] Scanning directory C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer\project
[debug]             Load.loadUnit: mkEval took 19.011899ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.746701 ms
[info] loading settings for project divideandconquer-build from idea.sbt ...
[debug]               Load.resolveProject(divideandconquer-build) took 4.717899ms
[debug]             Load.loadTransitive: finalizeProject(Project(id divideandconquer-build, base: C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer\project, plugins: List(<none>))) took 8.1013ms
[debug] [Loading] Done in C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer\project, returning: (divideandconquer-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3091.359099ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.685701ms
[debug]         Load.loadUnit(file:/C:/Users/Dylan/Desktop/DM11/Programacion/1A_Scala_Projects/divideAndConquer/project/, ...) took 3175.8964ms
[debug]       Load.apply: load took 3178.5554ms
[debug]       Load.apply: resolveProjects took 0.160499ms
[debug]       Load.apply: finalTransforms took 38.197999ms
[debug]       Load.apply: config.delegates took 0.522901ms
[debug]       Load.apply: Def.make(settings)... took 106.797ms
[debug]       Load.apply: structureIndex took 39.778401ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6252.9991ms
[debug]     Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer
[debug]       Load.loadUnit: mkEval took 0.6209ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.4037 ms
[info] loading settings for project divideandconquer from build.sbt ...
[debug]         Load.resolveProject(divideandconquer) took 37.1559ms
[debug]       Load.loadTransitive: finalizeProject(Project(id divideandconquer, base: C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer, plugins: List(<none>))) took 42.0994ms
[debug] [Loading] Done in C:\Users\Dylan\Desktop\DM11\Programacion\1A_Scala_Projects\divideAndConquer, returning: (divideandconquer)
[debug]     Load.loadUnit: loadedProjectsRaw took 1619.352399ms
[debug]     Load.loadUnit: cleanEvalClasses took 21.915ms
[debug]   Load.loadUnit(file:/C:/Users/Dylan/Desktop/DM11/Programacion/1A_Scala_Projects/divideAndConquer/, ...) took 7896.0259ms
[debug] Load.apply: load took 7899.545899ms
[debug] Load.apply: resolveProjects took 0.160399ms
[debug] Load.apply: finalTransforms took 43.872ms
[debug] Load.apply: config.delegates took 0.330599ms
[debug] Load.apply: Def.make(settings)... took 77.859499ms
[debug] Load.apply: structureIndex took 29.076ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to divideandconquer (in build file:/C:/Users/Dylan/Desktop/DM11/Programacion/1A_Scala_Projects/divideAndConquer/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56641 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56641, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to divideandconquer (in build file:/C:/Users/Dylan/Desktop/DM11/Programacion/1A_Scala_Projects/divideAndConquer/)
[debug] > Exec(idea-shell, None, None)
